// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  seed = "node prisma/seed.js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(cuid())
  name     String
  email    String @unique
  password String
  role     RolUsuario @default(EJECUTIVO)
  createdAt DateTime @default(now())
  turnosCreados Turno[] @relation("TurnosDelUsuario")
}

enum RolUsuario {
  ADMIN
  EJECUTIVO
}

model Trabajador {
  id                String             @id @default(cuid())
  rut               String             @unique
  nombreCompleto    String
  trabajadorTurnos  TrabajadorTurno[]
  historialAsignacion HistorialAsignacion[]
}

model Turno {
  id                 String             @id @default(cuid())
  fecha              DateTime
  modeloEjecutado    Boolean
  creadoEn           DateTime           @default(now())
  creadoPorId        String
  creadoPor   User @relation("TurnosDelUsuario", fields: [creadoPorId], references: [id])
  trabajadoresTurno  TrabajadorTurno[]
  busTurno           BusTurno[]
  planeTurno         PlaneTurno[]
  restricciones      RestriccionTurno[]
  historialAsignacion HistorialAsignacion[]
}

model TrabajadorTurno {
  id            String     @id @default(cuid())
  trabajadorId  String
  turnoId       String
  acercamiento  String
  origen        String
  destino       String
  subida        Boolean

  trabajador    Trabajador @relation(fields: [trabajadorId], references: [id], onDelete: Cascade)
  turno         Turno      @relation(fields: [turnoId], references: [id], onDelete: Cascade)

  assignmentBuses   AssignmentBus[]
  assignmentPlanes  AssignmentPlane[]
}


model BusTurno {
  id              String   @id @default(cuid())
  turnoId         String
  capacidad       Int
  horario_salida  DateTime
  horario_llegada DateTime
  comunas_origen String      
  comunas_destino String     

  turno           Turno    @relation(fields: [turnoId], references: [id], onDelete: Cascade)

  assignmentBuses AssignmentBus[]
}


model Plane {
  id        String          @id @default(cuid())
  capacidad Int
  ciudad_origen   String
  ciudad_destino  String
  horario_salida String
  horario_llegada String

  planeTurno PlaneTurno[]
}

model PlaneTurno {
  id        String   @id @default(cuid())
  planeId   String
  turnoId   String
  capacidad Int
  horario_salida DateTime
  horario_llegada DateTime

  plane     Plane    @relation(fields: [planeId], references: [id], onDelete: Cascade)
  turno     Turno    @relation(fields: [turnoId], references: [id], onDelete: Cascade)
  
  assignmentPlanes  AssignmentPlane[]
}


model AssignmentBus {
  id          String     @id @default(cuid())
  trabajadorTurnoId    String
  busTurnoId  String

  trabajadorTurno      TrabajadorTurno @relation(fields: [trabajadorTurnoId], references: [id], onDelete: Cascade)
  busTurno    BusTurno @relation(fields: [busTurnoId], references: [id], onDelete: Cascade)
}

model AssignmentPlane {
  id          String     @id @default(cuid())
  trabajadorTurnoId    String
  planeTurnoId    String

  trabajadorTurno      TrabajadorTurno @relation(fields: [trabajadorTurnoId], references: [id], onDelete: Cascade)
  planeTurno       PlaneTurno      @relation(fields: [planeTurnoId], references: [id], onDelete: Cascade)
}

model RestriccionTurno {
  id          String   @id @default(cuid())
  turnoId     String
  tipo        String
  valor       String
  descripcion String?

  turno       Turno    @relation(fields: [turnoId], references: [id], onDelete: Cascade)
}

model HistorialAsignacion {
  id            String     @id @default(cuid())
  turnoId       String
  trabajadorId  String
  tipo          String
  medioId       String
  origen        String
  destino       String
  fechaAsignado DateTime   @default(now())

  trabajador    Trabajador @relation(fields: [trabajadorId], references: [id], onDelete: Cascade)
  turno         Turno      @relation(fields: [turnoId], references: [id], onDelete: Cascade)

}

